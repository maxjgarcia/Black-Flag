---
// await new Promise((resolve) => setTimeout(resolve, 2000))

import { getCountdown } from "../lib/appwrite";

// const NEXT_MATCH = (await getCountdown())[0].time; 

const NEXT_MATCH_RESPONSE = await getCountdown();
let NEXT_MATCH = null


if (NEXT_MATCH_RESPONSE && NEXT_MATCH_RESPONSE.length > 0) {
  NEXT_MATCH = NEXT_MATCH_RESPONSE[0].time;
} 


---

<!-- Countdown -->
<section
  data-date={NEXT_MATCH}
  class='flex flex-row gap-y-10 gap-x-5 justify-center items-center uppercase font-semibold'
>
  <div class='cd-container'>
    <span class='text-6xl tabular-nums' data-days>00</span>
    <span class='text-xs text-center'>DÃ­as</span>
  </div>

  <span aria-hidden='true' class='mb-4 text-xl'>:</span>

  <div class='cd-container'>
    <span class='text-6xl tabular-nums' data-hours>00</span>
    <span class='text-xs text-center'>Horas</span>
  </div>

  <span aria-hidden='true' class='mb-4 text-xl'>:</span>

  <div class='cd-container'>
    <span class='text-6xl tabular-nums' data-minutes>00</span>
    <span class='text-xs text-center'>Minutos</span>
  </div>

  <span aria-hidden='true' class='mb-4 text-xl'>:</span>

  <div class='cd-container'>
    <span class='text-6xl tabular-nums' data-seconds>00</span>
    <span class='text-xs text-center'>Segundos</span>
  </div>
</section>

<style>
  .cd-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    row-gap: 0.5rem;
    width: 4rem;
  }

</style>


<script>
  const SECOND = 1000
  const MINUTE = SECOND * 60
  const HOUR = MINUTE * 60
  const DAY = HOUR * 24


  function countdown() {
    const $countdown = document.querySelector('[data-date]')
    if (!$countdown) return

    const $days = $countdown.querySelector('[data-days]')
    const $hours = $countdown.querySelector('[data-hours]')
    const $minutes = $countdown.querySelector('[data-minutes]')
    const $seconds = $countdown.querySelector('[data-seconds]')

    const timestamp = $countdown.getAttribute('data-date')
    if (!timestamp) return

    const date = new Date(+timestamp).getTime()

    const formatTime = (time: number) => {
      return Math.floor(time).toString().padStart(2, '0')
    }

    function updateCountdown() {
      const now = Date.now()
      const diff = date - now

      if (diff <= 0) {
        if ($countdown instanceof HTMLElement) {
          $countdown.innerText = 'no hay partidos programados'
          $countdown.className = ' text-center text-slate-400 text-lg'
        }

        return
      }

      if ($days instanceof HTMLElement) {
        $days.innerText = formatTime(diff / DAY)
      }

      if ($hours instanceof HTMLElement) {
        $hours.innerText = formatTime((diff % DAY) / HOUR)
      }

      if ($minutes instanceof HTMLElement) {
        $minutes.innerText = formatTime((diff % HOUR) / MINUTE)
      }

      if ($seconds instanceof HTMLElement) {
        $seconds.innerText = formatTime((diff % MINUTE) / SECOND)
      }
    }

    setInterval(updateCountdown, SECOND)
  }

  countdown()
</script>


